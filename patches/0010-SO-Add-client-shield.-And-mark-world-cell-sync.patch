From 578f2c6855d6486c3424ef212bee9d4ff17f87f4 Mon Sep 17 00:00:00 2001
From: way-zer <himc.wicp@gmail.com>
Date: Mon, 14 Nov 2022 15:52:02 +0800
Subject: [PATCH] SO: Add @client @shield. And mark `world-cell` sync.

---
 core/src/mindustry/content/Blocks.java         | 1 +
 core/src/mindustry/entities/comp/UnitComp.java | 1 +
 core/src/mindustry/logic/GlobalVars.java       | 5 ++++-
 core/src/mindustry/logic/LAccess.java          | 1 +
 4 files changed, 7 insertions(+), 1 deletion(-)

diff --git a/core/src/mindustry/content/Blocks.java b/core/src/mindustry/content/Blocks.java
index 761dbee..e12fec7 100644
--- a/core/src/mindustry/content/Blocks.java
+++ b/core/src/mindustry/content/Blocks.java
@@ -5929,6 +5929,7 @@ public class Blocks{
             privileged = true;
             memoryCapacity = 128;
             forceDark = true;
+            sync = true;
         }};
 
         worldMessage = new MessageBlock("world-message"){{
diff --git a/core/src/mindustry/entities/comp/UnitComp.java b/core/src/mindustry/entities/comp/UnitComp.java
index 550a68f..ef82b90 100644
--- a/core/src/mindustry/entities/comp/UnitComp.java
+++ b/core/src/mindustry/entities/comp/UnitComp.java
@@ -209,6 +209,7 @@ abstract class UnitComp implements Healthc, Physicsc, Hitboxc, Statusc, Teamc, I
             case rotation -> rotation;
             case health -> health;
             case maxHealth -> maxHealth;
+            case shield -> shield();
             case ammo -> !state.rules.unitAmmo ? type.ammoCapacity : ammo;
             case ammoCapacity -> type.ammoCapacity;
             case x -> World.conv(x);
diff --git a/core/src/mindustry/logic/GlobalVars.java b/core/src/mindustry/logic/GlobalVars.java
index d3d37c5..a9f34b9 100644
--- a/core/src/mindustry/logic/GlobalVars.java
+++ b/core/src/mindustry/logic/GlobalVars.java
@@ -25,7 +25,7 @@ public class GlobalVars{
     public static final Rand rand = new Rand();
 
     //non-constants that depend on state
-    private static int varTime, varTick, varSecond, varMinute, varWave, varWaveTime;
+    private static int varTime, varTick, varSecond, varMinute, varWave, varWaveTime, varClient;
 
     private ObjectIntMap<String> namesToIds = new ObjectIntMap<>();
     private Seq<Var> vars = new Seq<>(Var.class);
@@ -58,6 +58,7 @@ public class GlobalVars{
         put("@ctrlProcessor", ctrlProcessor);
         put("@ctrlPlayer", ctrlPlayer);
         put("@ctrlCommand", ctrlCommand);
+        varClient = put("@client", 0);
 
         //store base content
 
@@ -138,6 +139,8 @@ public class GlobalVars{
         //wave state
         vars.items[varWave].numval = state.wave;
         vars.items[varWaveTime].numval = state.wavetime / 60f;
+
+        vars.items[varClient].numval = net.client() ? 1 : 0;
     }
 
     /** @return a piece of content based on its logic ID. This is not equivalent to content ID. */
diff --git a/core/src/mindustry/logic/LAccess.java b/core/src/mindustry/logic/LAccess.java
index 2c724d7..ecdfe8c 100644
--- a/core/src/mindustry/logic/LAccess.java
+++ b/core/src/mindustry/logic/LAccess.java
@@ -19,6 +19,7 @@ public enum LAccess{
     ammoCapacity,
     health,
     maxHealth,
+    shield,
     heat,
     efficiency,
     progress,
-- 
2.40.1.windows.1

